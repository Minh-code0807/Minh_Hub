local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

-- C·∫•u h√¨nh h·ªá th·ªëng
local SCAN_INTERVAL = 0.2
local TELEPORT_DURATION = 0.5
local SCAN_RADIUS = 200
local WALK_SPEED = 32
local PRE_TELEPORT_SCRIPT_URL = "https://raw.githubusercontent.com/Minh-code0807/HUB/refs/heads/main/Help%20aotu%20farm%20bond"
local PRE_TELEPORT_DELAY = 5 -- 5 gi√¢y ch·ªù sau khi load script

-- C√°c ƒëi·ªÉm qu√©t
local SCAN_POINTS = {
    Vector3.new(56.22, 3.00, 29941.12),
    Vector3.new(-428.75, 26.07, -49040.91)
}
local SCAN_CYCLES = 5

-- Tr·∫°ng th√°i h·ªá th·ªëng
local state = {
    gui = nil,
    textLabel = nil,
    targetBond = nil,
    isRunning = true,
    isScanning = false,
    teleporting = false,
    currentCycle = 1,
    bondsFound = 0,
    preTeleportScriptLoaded = false
}

-- T·∫°o GUI
local function createGUI()
    if state.gui then state.gui:Destroy() end

    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "BondScannerUltra"
    screenGui.Parent = player:WaitForChild("PlayerGui")
    screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0.35, 0, 0.2, 0)
    frame.Position = UDim2.new(0.02, 0, 0.75, 0)
    frame.BackgroundColor3 = Color3.fromRGB(20, 20, 30)
    frame.BackgroundTransparency = 0.2
    frame.BorderSizePixel = 0
    
    local textLabel = Instance.new("TextLabel")
    textLabel.Size = UDim2.new(0.96, 0, 0.94, 0)
    textLabel.Position = UDim2.new(0.02, 0, 0.02, 0)
    textLabel.BackgroundTransparency = 1
    textLabel.TextColor3 = Color3.new(1, 1, 1)
    textLabel.TextXAlignment = Enum.TextXAlignment.Left
    textLabel.TextYAlignment = Enum.TextYAlignment.Top
    textLabel.Font = Enum.Font.Code
    textLabel.TextSize = 15
    textLabel.TextStrokeTransparency = 0.7
    textLabel.TextWrapped = true
    
    textLabel.Parent = frame
    frame.Parent = screenGui
    
    state.gui = screenGui
    state.textLabel = textLabel
end

-- C·∫≠p nh·∫≠t GUI
local function updateGUI()
    if not state.textLabel then return end
    
    local statusText = ""
    if state.teleporting then
        statusText = "üöÄ ƒêANG TELEPORT"
    elseif state.isScanning then
        statusText = "üîç ƒêANG QU√âT"
    else
        statusText = "üö∂ ƒêANG DI CHUY·ªÇN"
    end
    
    local bondInfo = ""
    if state.targetBond then
        bondInfo = string.format("üéØ Bond: %s\nüìç V·ªã tr√≠: %.1f, %.1f, %.1f", 
            state.targetBond.name, 
            state.targetBond.position.X, 
            state.targetBond.position.Y, 
            state.targetBond.position.Z)
    else
        bondInfo = "‚ùå Ch∆∞a t√¨m th·∫•y bond"
    end
    
    local scriptStatus = state.preTeleportScriptLoaded and "‚úÖ ƒê√£ t·∫£i script" or "‚ùå Ch∆∞a t·∫£i script"
    
    state.textLabel.Text = string.format("H·ªÜ TH·ªêNG QU√âT BOND ULTRA\n\n%s\n%s\n\n%s\nChu k·ª≥: %d/%d\nT·ªïng bond: %d", 
        statusText, bondInfo, scriptStatus, state.currentCycle, SCAN_CYCLES, state.bondsFound)
end

-- T·∫£i script tr∆∞·ªõc khi teleport
local function loadPreTeleportScript()
    if state.preTeleportScriptLoaded then return end
    
    state.textLabel.Text = "‚è≥ ƒêang t·∫£i script tr∆∞·ªõc khi teleport..."
    
    local success, err = pcall(function()
        local script = loadstring(game:HttpGet(PRE_TELEPORT_SCRIPT_URL))()
        if script then
            state.preTeleportScriptLoaded = true
            state.textLabel.Text = "‚úÖ ƒê√£ t·∫£i script th√†nh c√¥ng, ƒë·ª£i 5 gi√¢y..."
            wait(PRE_TELEPORT_DELAY)
        end
    end)
    
    if not success then
        warn("L·ªói khi t·∫£i script: "..tostring(err))
        state.textLabel.Text = "‚ùå L·ªói khi t·∫£i script, ti·∫øp t·ª•c b√¨nh th∆∞·ªùng..."
        wait(2)
    end
    
    updateGUI()
end

-- Qu√©t bond trong ph·∫°m vi
local function scanForBonds()
    if not character or not humanoidRootPart then return nil end
    
    local bonds = {}
    local characterPos = humanoidRootPart.Position
    
    local function scanRecursive(parent)
        for _, item in ipairs(parent:GetChildren()) do
            if item:IsA("BasePart") and string.find(string.lower(item.Name), "bond") then
                local distance = (item.Position - characterPos).Magnitude
                if distance <= SCAN_RADIUS then
                    table.insert(bonds, {
                        instance = item,
                        position = item.Position,
                        name = item.Name,
                        distance = distance
                    })
                end
            end
            scanRecursive(item)
        end
    end
    
    scanRecursive(workspace)
    
    table.sort(bonds, function(a, b)
        return a.distance < b.distance
    end)
    
    return bonds[1]
end

-- Di chuy·ªÉn ƒë·∫øn v·ªã tr√≠
local function walkToPosition(position)
    if state.teleporting then return end
    
    humanoid.WalkSpeed = WALK_SPEED
    humanoid:MoveTo(position)
    
    -- Ch·ªù ƒë·∫øn khi g·∫ßn ƒë·∫øn ƒë√≠ch
    while (humanoidRootPart.Position - position).Magnitude > 5 and state.isRunning do
        RunService.Heartbeat:Wait()
    end
end

-- Teleport nhanh gi·ªØa c√°c ƒëi·ªÉm
local function quickTeleport(startPos, endPos)
    -- T·∫£i script tr∆∞·ªõc khi teleport
    loadPreTeleportScript()
    
    state.teleporting = true
    updateGUI()
    
    humanoidRootPart.Anchored = true
    local tweenInfo = TweenInfo.new(
        TELEPORT_DURATION,
        Enum.EasingStyle.Linear,
        Enum.EasingDirection.Out,
        0,
        false,
        0
    )
    
    local tween = TweenService:Create(humanoidRootPart, tweenInfo, {Position = endPos})
    tween:Play()
    tween.Completed:Wait()
    
    humanoidRootPart.Anchored = false
    state.teleporting = false
end

-- Thu th·∫≠p bond
local function collectBond(bond)
    if not bond or not bond.instance or not bond.instance.Parent then return end
    
    state.targetBond = bond
    updateGUI()
    
    -- Di chuy·ªÉn ƒë·∫øn bond
    walkToPosition(bond.position)
    
    -- ƒê√°nh d·∫•u ƒë√£ thu th·∫≠p
    state.bondsFound = state.bondsFound + 1
    state.targetBond = nil
end

-- Chu tr√¨nh qu√©t ch√≠nh
local function scanCycle()
    for i = 1, SCAN_CYCLES do
        state.currentCycle = i
        updateGUI()
        
        -- Di chuy·ªÉn v√† qu√©t t·ª´ng ƒëi·ªÉm
        for _, point in ipairs(SCAN_POINTS) do
            -- ƒêi b·ªô ƒë·∫øn ƒëi·ªÉm qu√©t
            state.isScanning = false
            walkToPosition(point)
            
            -- Qu√©t t·∫°i ƒëi·ªÉm
            state.isScanning = true
            local bond = scanForBonds()
            if bond then
                collectBond(bond)
            end
            
            updateGUI()
        end
        
        -- Teleport nhanh gi·ªØa c√°c ƒëi·ªÉm ƒë·ªÉ qu√©t l·∫°i
        if i < SCAN_CYCLES then
            quickTeleport(SCAN_POINTS[#SCAN_POINTS], SCAN_POINTS[1])
        end
    end
end

-- H·ªá th·ªëng ch√≠nh
local function startSystem()
    createGUI()
    
    player.CharacterAdded:Connect(function(newChar)
        character = newChar
        humanoid = newChar:WaitForChild("Humanoid")
        humanoidRootPart = newChar:WaitForChild("HumanoidRootPart")
        updateGUI()
    end)
    
    coroutine.wrap(scanCycle)()
end

-- Kh·ªüi ƒë·ªông h·ªá th·ªëng
startSystem()
