-- Script Auto Farm Bond Tự Động Di Chuyển Liên Tục
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")

-- Cấu hình hệ thống
local WAYPOINTS = {
    Vector3.new(-428.75, 26.07, -49040.91),  -- Điểm chính cần đến
    Vector3.new(100, 25, -49000),             -- Điểm phụ 1
    Vector3.new(-300, 30, -49100)             -- Điểm phụ 2
}
local MOVEMENT_SPEED = 1000
local SCAN_INTERVAL = 0.1
local ARRIVAL_THRESHOLD = 5
local STUCK_TIMEOUT = 5
local FALLBACK_Y = -100
local BOND_KEYWORDS = {"bond", "money", "coin", "reward"}

-- Khởi tạo nhân vật
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

-- Hàm di chuyển thông minh với chống kẹt
local function SmartMoveTo(target)
    humanoid.WalkSpeed = MOVEMENT_SPEED
    humanoid.AutoRotate = false
    
    local startTime = os.clock()
    local lastPosition = humanoidRootPart.Position
    
    while humanoidRootPart and humanoid do
        -- Tính toán hướng di chuyển
        local direction = (target - humanoidRootPart.Position).Unit
        humanoidRootPart.CFrame = CFrame.lookAt(humanoidRootPart.Position, humanoidRootPart.Position + direction)
        
        -- Di chuyển
        humanoid:MoveTo(target)
        
        -- Kiểm tra điều kiện dừng
        local distance = (humanoidRootPart.Position - target).Magnitude
        if distance < ARRIVAL_THRESHOLD then
            break
        end
        
        -- Kiểm tra bị kẹt
        if os.clock() - startTime > STUCK_TIMEOUT and 
           (humanoidRootPart.Position - lastPosition).Magnitude < 10 then
            print("Kích hoạt chế độ thoát kẹt!")
            humanoidRootPart.CFrame = CFrame.new(
                humanoidRootPart.Position.X,
                FALLBACK_Y,
                humanoidRootPart.Position.Z
            )
            task.wait(1)
            startTime = os.clock()
        end
        
        lastPosition = humanoidRootPart.Position
        RunService.Heartbeat:Wait()
    end
    
    humanoid.AutoRotate = true
end

-- Hàm quét bond nâng cao
local function AdvancedBondScan()
    local closestBond = nil
    local minDistance = math.huge
    
    for _, obj in ipairs(workspace:GetDescendants()) do
        if obj:IsA("BasePart") then
            -- Kiểm tra tên bond
            local lowerName = obj.Name:lower()
            local isBond = false
            for _, kw in ipairs(BOND_KEYWORDS) do
                if lowerName:find(kw:lower()) then
                    isBond = true
                    break
                end
            end
            
            -- Nếu là bond thì xử lý
            if isBond then
                local dist = (obj.Position - humanoidRootPart.Position).Magnitude
                if dist < minDistance then
                    closestBond = obj
                    minDistance = dist
                end
            end
        end
    end
    
    return closestBond
end

-- Hàm thu thập bond
local function CollectBond(bond)
    -- Canh camera
    local camera = workspace.CurrentCamera
    camera.CFrame = CFrame.lookAt(camera.CFrame.Position, bond.Position)
    
    -- Chạy script thu thập
    local success, err = pcall(function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/Minh-code0807/HUB/main/Nh%E1%BA%B7t%20bond.lua"))()
    end)
    
    if success then
        print("Đã thu thập bond thành công!")
        return true
    else
        warn("Lỗi khi thu thập bond:", err)
        return false
    end
end

-- Vòng lặp chính
local function MainLoop()
    local currentWaypoint = 1
    
    while true do
        -- Di chuyển đến waypoint hiện tại
        local target = WAYPOINTS[currentWaypoint]
        print("Đang di chuyển đến waypoint", currentWaypoint, ":", target)
        
        SmartMoveTo(target)
        
        -- Quét bond trong khi di chuyển
        local bond = AdvancedBondScan()
        if bond then
            print("Phát hiện bond, đang thu thập...")
            CollectBond(bond)
        end
        
        -- Chuyển sang waypoint tiếp theo
        currentWaypoint = currentWaypoint + 1
        if currentWaypoint > #WAYPOINTS then
            currentWaypoint = 1  -- Quay lại waypoint đầu tiên
        end
        
        -- Thêm delay ngẫu nhiên để tránh bị phát hiện
        task.wait(math.random(0.1, 0.5))
    end
end

-- Xử lý respawn
player.CharacterAdded:Connect(function(newChar)
    character = newChar
    humanoid = newChar:WaitForChild("Humanoid")
    humanoidRootPart = newChar:WaitForChild("HumanoidRootPart")
    print("Đã respawn, tiếp tục farm...")
end)

-- Bắt đầu hệ thống
MainLoop()
