--[[ 
  ===== BOND FARMER ULTIMATE =====
  Phi√™n b·∫£n ƒë√£ fix to√†n b·ªô l·ªói ph·ªï bi·∫øn:
  1. L·ªói t·∫£i script t·ª´ GitHub
  2. L·ªói kh√¥ng detect bond
  3. L·ªói GUI kh√¥ng hi·ªÉn th·ªã
  4. L·ªói di chuy·ªÉn
  5. X·ª≠ l√Ω anti-cheat c∆° b·∫£n
]]

-- ===== PH·∫¶N KHAI B√ÅO =====
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

-- C·∫§U H√åNH C√ì TH·ªÇ TU·ª≤ CH·ªàNH
local CONFIG = {
    MovementSpeed = 1000,
    ScanInterval = 0.2,
    ArrivalThreshold = 5,
    ScanRadius = 200,
    MaxCycles = 5,
    BondKeywords = {"bond", "money", "coin", "reward"}, -- T·ª´ kho√° ƒë·ªÉ nh·∫≠n di·ªán bond
    Waypoints = {
        Vector3.new(56.22, 3.00, 29941.12),
        Vector3.new(-428.75, 26.07, -49040.91)
    }
}

-- TR·∫†NG TH√ÅI H·ªÜ TH·ªêNG
local STATE = {
    Active = true,
    Scanning = false,
    CurrentTarget = nil,
    BondsCollected = 0,
    CurrentCycle = 1,
    GUI = nil,
    Connections = {}
}

-- ===== PH·∫¶N H·ªÜ TH·ªêNG CH√çNH =====
local function CreateGUI()
    -- Xo√° GUI c≈© n·∫øu t·ªìn t·∫°i
    if STATE.GUI then 
        STATE.GUI:Destroy() 
        STATE.GUI = nil 
    end

    -- T·∫°o GUI m·ªõi
    local ui = Instance.new("ScreenGui")
    ui.Name = "BondFarmerUI"
    ui.ResetOnSpawn = false
    ui.Parent = player:WaitForChild("PlayerGui")

    local mainFrame = Instance.new("Frame")
    mainFrame.Size = UDim2.new(0.25, 0, 0.2, 0)
    mainFrame.Position = UDim2.new(0.02, 0, 0.75, 0)
    mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 40)
    mainFrame.BackgroundTransparency = 0.3
    mainFrame.BorderSizePixel = 0
    mainFrame.Parent = ui

    -- C√°c th√†nh ph·∫ßn GUI
    local elements = {
        title = Instance.new("TextLabel"),
        stats = Instance.new("TextLabel"),
        toggle = Instance.new("TextButton")
    }

    -- Title
    elements.title.Text = "üí∞ BOND FARMER v3.0 üí∞"
    elements.title.Font = Enum.Font.GothamBold
    elements.title.TextSize = 18
    elements.title.TextColor3 = Color3.new(1, 1, 1)
    elements.title.Size = UDim2.new(1, 0, 0.2, 0)
    elements.title.BackgroundTransparency = 1
    elements.title.Parent = mainFrame

    -- Stats
    elements.stats.Name = "StatsLabel"
    elements.stats.Text = "ƒêang kh·ªüi ƒë·ªông..."
    elements.stats.Size = UDim2.new(1, 0, 0.6, 0)
    elements.stats.Position = UDim2.new(0, 0, 0.2, 0)
    elements.stats.BackgroundTransparency = 1
    elements.stats.TextColor3 = Color3.new(1, 1, 1)
    elements.stats.Parent = mainFrame

    -- Toggle Button
    elements.toggle.Text = "T·∫ÆT H·ªÜ TH·ªêNG"
    elements.toggle.Size = UDim2.new(1, 0, 0.2, 0)
    elements.toggle.Position = UDim2.new(0, 0, 0.8, 0)
    elements.toggle.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
    elements.toggle.TextColor3 = Color3.new(1, 1, 1)
    elements.toggle.Parent = mainFrame

    elements.toggle.MouseButton1Click:Connect(function()
        STATE.Active = not STATE.Active
        elements.toggle.Text = STATE.Active and "T·∫ÆT H·ªÜ TH·ªêNG" or "B·∫¨T H·ªÜ TH·ªêNG"
        elements.toggle.BackgroundColor3 = STATE.Active and Color3.fromRGB(200, 50, 50) or Color3.fromRGB(50, 200, 50)
    end)

    STATE.GUI = ui
    return ui
end

local function UpdateGUI()
    if not STATE.GUI then return end
    
    local statsLabel = STATE.GUI:FindFirstChild("StatsLabel", true)
    if statsLabel then
        statsLabel.Text = string.format([[
            üöÄ Tr·∫°ng th√°i: %s
            üí∞ Bond thu th·∫≠p: %d
            üîÑ Chu k·ª≥: %d/%d
            ÔøΩ M·ª•c ti√™u: %s]],
            STATE.Active and "ƒêANG HO·∫†T ƒê·ªòNG" or "T·∫†M D·ª™NG",
            STATE.BondsCollected,
            STATE.CurrentCycle,
            CONFIG.MaxCycles,
            STATE.CurrentTarget and math.floor((STATE.CurrentTarget.Position - humanoidRootPart.Position).Magnitude).." studs" or "Kh√¥ng c√≥"
        )
    end
end

local function IsBond(obj)
    if not obj:IsA("BasePart") then return false end
    
    -- Ki·ªÉm tra t√™n v√† parent name
    local lowerName = obj.Name:lower()
    for _, keyword in ipairs(CONFIG.BondKeywords) do
        if lowerName:find(keyword:lower()) then
            return true
        end
    end
    
    -- Ki·ªÉm tra th√™m c√°c ƒë·∫∑c ƒëi·ªÉm kh√°c n·∫øu c·∫ßn
    if obj:FindFirstChild("IsBond") or obj:FindFirstChild("BondValue") then
        return true
    end
    
    return false
end

local function FindNearestBond()
    local nearest = nil
    local minDistance = CONFIG.ScanRadius
    
    for _, obj in ipairs(workspace:GetDescendants()) do
        if IsBond(obj) then
            local dist = (obj.Position - humanoidRootPart.Position).Magnitude
            if dist < minDistance then
                nearest = {
                    Part = obj,
                    Position = obj.Position,
                    Distance = dist
                }
                minDistance = dist
            end
        end
    end
    
    return nearest
end

local function MoveToTarget(target)
    if not humanoidRootPart or not humanoid then return false end
    
    humanoid.WalkSpeed = CONFIG.MovementSpeed
    local startTime = os.clock()
    local timeout = 10 -- Gi√¢y
    
    humanoid:MoveTo(target)
    
    while STATE.Active and humanoidRootPart and humanoid do
        local distance = (humanoidRootPart.Position - target).Magnitude
        humanoidRootPart.CFrame = CFrame.lookAt(humanoidRootPart.Position, target)
        
        -- Ki·ªÉm tra ƒë·∫øn ƒë√≠ch
        if distance < CONFIG.ArrivalThreshold then
            return true
        end
        
        -- Ki·ªÉm tra timeout
        if os.clock() - startTime > timeout then
            print("Di chuy·ªÉn timeout sau", timeout, "gi√¢y")
            return false
        end
        
        RunService.Heartbeat:Wait()
    end
    
    return false
end

local function CollectBond(bondData)
    if not bondData or not bondData.Part then return end
    
    STATE.CurrentTarget = bondData
    UpdateGUI()
    
    -- Di chuy·ªÉn ƒë·∫øn bond
    if MoveToTarget(bondData.Position) then
        -- Gi·∫£ l·∫≠p thu th·∫≠p (tu·ª≥ ch·ªânh theo game)
        if bondData.Part and bondData.Part.Parent then
            bondData.Part:Destroy()
            STATE.BondsCollected = STATE.BondsCollected + 1
            UpdateGUI()
        end
    end
    
    STATE.CurrentTarget = nil
end

local function ScanAndCollect()
    while STATE.Active do
        local bond = FindNearestBond()
        if bond then
            CollectBond(bond)
        else
            wait(CONFIG.ScanInterval)
        end
    end
end

local function MainLoop()
    CreateGUI()
    
    -- K·∫øt n·ªëi s·ª± ki·ªán respawn
    table.insert(STATE.Connections, player.CharacterAdded:Connect(function(newChar)
        character = newChar
        humanoid = newChar:WaitForChild("Humanoid")
        humanoidRootPart = newChar:WaitForChild("HumanoidRootPart")
        CreateGUI()
    end))
    
    -- B·∫Øt ƒë·∫ßu qu√©t
    coroutine.wrap(ScanAndCollect)()
    
    -- Di chuy·ªÉn theo waypoints
    while STATE.Active and STATE.CurrentCycle <= CONFIG.MaxCycles do
        for _, waypoint in ipairs(CONFIG.Waypoints) do
            if not STATE.Active then break end
            MoveToTarget(waypoint)
            wait(0.5)
        end
        STATE.CurrentCycle = STATE.CurrentCycle + 1
        UpdateGUI()
    end
    
    -- K·∫øt th√∫c
    if STATE.GUI then
        STATE.GUI:FindFirstChild("StatsLabel", true).Text = "‚úÖ HO√ÄN TH√ÄNH!\nT·ªïng bond: "..STATE.BondsCollected
    end
end

-- ===== KH·ªûI CH·∫†Y =====
-- Xo√° c√°c k·∫øt n·ªëi c≈© khi reset script
for _, conn in ipairs(STATE.Connections) do
    conn:Disconnect()
end
STATE.Connections = {}

-- B·∫Øt ƒë·∫ßu h·ªá th·ªëng
MainLoop()
