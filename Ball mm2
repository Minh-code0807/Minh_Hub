-- ƒê·∫∑t script n√†y trong StarterGui
local player = game.Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Bi·∫øn to√†n c·ª•c
local autoFarmEnabled = false
local connection = nil
local isTeleporting = false
local originalGravity = workspace.Gravity

-- T·∫°o ScreenGui (s·∫Ω t·ªìn t·∫°i ngay c·∫£ khi player ch·∫øt)
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "MinhHubGui"
screenGui.Parent = playerGui
screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
screenGui.ResetOnSpawn = false -- Quan tr·ªçng: Kh√¥ng reset khi respawn

-- T·∫°o main frame (c√≥ th·ªÉ k√©o)
local mainFrame = Instance.new("Frame")
mainFrame.Name = "MainFrame"
mainFrame.Size = UDim2.new(0, 220, 0, 130)
mainFrame.Position = UDim2.new(0.5, -110, 0, 10)
mainFrame.AnchorPoint = Vector2.new(0.5, 0)
mainFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
mainFrame.BorderSizePixel = 0
mainFrame.Parent = screenGui

-- Th√™m kh·∫£ nƒÉng k√©o cho frame
local dragInput, dragStart, startPos
local function update(input)
	local delta = input.Position - dragStart
	mainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

mainFrame.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		dragStart = input.Position
		startPos = mainFrame.Position
		
		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragInput = nil
			end
		end)
	end
end)

mainFrame.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
		dragInput = input
	end
end)

game:GetService("UserInputService").InputChanged:Connect(function(input)
	if input == dragInput then
		update(input)
	end
end)

-- T·∫°o UICorner cho main frame
local uiCorner = Instance.new("UICorner")
uiCorner.CornerRadius = UDim.new(0, 8)
uiCorner.Parent = mainFrame

-- T·∫°o n√∫t bay
local teleportButton = Instance.new("TextButton")
teleportButton.Name = "TeleportButton"
teleportButton.Size = UDim2.new(0.8, 0, 0.3, 0)
teleportButton.Position = UDim2.new(0.1, 0, 0.1, 0)
teleportButton.BackgroundColor3 = Color3.fromRGB(60, 120, 200)
teleportButton.BorderSizePixel = 0
teleportButton.Text = "Fly to ball"
teleportButton.TextColor3 = Color3.fromRGB(255, 255, 255)
teleportButton.Font = Enum.Font.GothamBold
teleportButton.TextSize = 14
teleportButton.Parent = mainFrame

-- T·∫°o n√∫t Auto Farm
local autoFarmButton = Instance.new("TextButton")
autoFarmButton.Name = "AutoFarmButton"
autoFarmButton.Size = UDim2.new(0.8, 0, 0.3, 0)
autoFarmButton.Position = UDim2.new(0.1, 0, 0.45, 0)
autoFarmButton.BackgroundColor3 = Color3.fromRGB(60, 200, 60)
autoFarmButton.BorderSizePixel = 0
autoFarmButton.Text = "Ball Auto Farm"
autoFarmButton.TextColor3 = Color3.fromRGB(255, 255, 255)
autoFarmButton.Font = Enum.Font.GothamBold
autoFarmButton.TextSize = 14
autoFarmButton.Parent = mainFrame

-- T·∫°o UICorner cho c√°c n√∫t
local buttonCorner = Instance.new("UICorner")
buttonCorner.CornerRadius = UDim.new(0, 6)
buttonCorner.Parent = teleportButton

local buttonCorner2 = buttonCorner:Clone()
buttonCorner2.Parent = autoFarmButton

-- T·∫°o label Minh Hub
local minhHubLabel = Instance.new("TextLabel")
minhHubLabel.Name = "MinhHubLabel"
minhHubLabel.Size = UDim2.new(0.8, 0, 0.2, 0)
minhHubLabel.Position = UDim2.new(0.1, 0, 0.78, 0)
minhHubLabel.BackgroundTransparency = 1
minhHubLabel.Text = "Minh Hub"
minhHubLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
minhHubLabel.Font = Enum.Font.GothamBold
minhHubLabel.TextSize = 16
minhHubLabel.Parent = mainFrame

-- Hi·ªáu ·ª©ng hover cho n√∫t (t·ªëi ∆∞u)
local buttonHoverConnections = {}
local function setupButtonHover(button, normalColor, hoverColor)
	if buttonHoverConnections[button] then
		for _, conn in pairs(buttonHoverConnections[button]) do
			conn:Disconnect()
		end
	end
	
	buttonHoverConnections[button] = {}
	
	local conn1 = button.MouseEnter:Connect(function()
		button.BackgroundColor3 = hoverColor
	end)
	
	local conn2 = button.MouseLeave:Connect(function()
		button.BackgroundColor3 = normalColor
	end)
	
	buttonHoverConnections[button] = {conn1, conn2}
end

setupButtonHover(teleportButton, Color3.fromRGB(60, 120, 200), Color3.fromRGB(80, 150, 240))
setupButtonHover(autoFarmButton, Color3.fromRGB(60, 200, 60), Color3.fromRGB(80, 220, 80))

-- Hi·ªáu ·ª©ng nh·∫•n n√∫t (t·ªëi ∆∞u)
local function buttonClickEffect(button)
	local originalSize = button.Size
	button.Size = UDim2.new(0.75, 0, 0.27, 0)
	
	delay(0.1, function()
		if button.Parent then
			button.Size = originalSize
		end
	end)
end

-- Cache ƒë·ªÉ t·ªëi ∆∞u hi·ªáu su·∫•t
local coinCache = {}
local lastCoinUpdate = 0
local CACHE_DURATION = 0.5 -- Gi·∫£m th·ªùi gian cache xu·ªëng 0.5 gi√¢y

-- H√†m t√¨m CoinContainer g·∫ßn nh·∫•t (t·ªëi ∆∞u)
local function findNearestCoinContainer(playerPosition)
	local currentTime = tick()
	
	-- C·∫≠p nh·∫≠t cache n·∫øu c·∫ßn
	if currentTime - lastCoinUpdate > CACHE_DURATION or #coinCache == 0 then
		coinCache = {}
		
		-- Ch·ªâ t√¨m c√°c object c√≥ th·ªÉ l√† coin
		for _, obj in pairs(workspace:GetDescendants()) do
			if (obj:IsA("BasePart") or obj:IsA("MeshPart") or obj:IsA("Part")) and (obj.Name:lower():find("coin") or obj.Name:lower():find("money") or obj.Name:lower():find("dollar") or obj.Name:lower():find("cash")) then
				table.insert(coinCache, obj)
			end
		end
		
		lastCoinUpdate = currentTime
	end
	
	if #coinCache == 0 then
		return nil
	end
	
	-- T√¨m coin g·∫ßn nh·∫•t trong cache
	local closestCoin = nil
	local shortestDistance = math.huge
	
	for _, coin in ipairs(coinCache) do
		if coin.Parent then -- Ki·ªÉm tra coin c√≤n t·ªìn t·∫°i
			local distance = (playerPosition - coin.Position).Magnitude
			if distance < shortestDistance then
				shortestDistance = distance
				closestCoin = coin
			end
		end
	end
	
	return closestCoin
end

-- H√†m bay xuy√™n t∆∞·ªùng (t·ªëi ∆∞u)
local function noclipTeleportToCoin()
	if isTeleporting then return false end
	isTeleporting = true
	
	local character = player.Character
	if not character then 
		isTeleporting = false
		return false 
	end
	
	local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
	if not humanoidRootPart then 
		isTeleporting = false
		return false 
	end
	
	-- T√¨m coin g·∫ßn nh·∫•t
	local coin = findNearestCoinContainer(humanoidRootPart.Position)
	if not coin then
		isTeleporting = false
		return false
	end
	
	-- K√≠ch ho·∫°t noclip
	local noclip = Instance.new("BodyVelocity")
	noclip.Name = "NoclipVelocity"
	noclip.MaxForce = Vector3.new(100000, 100000, 100000)
	noclip.Velocity = Vector3.new(0, 0, 0)
	noclip.Parent = humanoidRootPart
	
	-- T·∫Øt collision v√† l∆∞u tr·∫°ng th√°i
	local parts = {}
	for _, part in pairs(character:GetDescendants()) do
		if part:IsA("BasePart") then
			parts[part] = part.CanCollide
			part.CanCollide = false
		end
	end
	
	-- Di chuy·ªÉn tr·ª±c ti·∫øp ƒë·∫øn coin (bay nhanh)
	local targetPosition = coin.Position + Vector3.new(0, 2, 0)
	humanoidRootPart.CFrame = CFrame.new(targetPosition)
	
	-- D·ªçn d·∫πp ngay l·∫≠p t·ª©c
	for part, canCollide in pairs(parts) do
		if part.Parent then
			part.CanCollide = canCollide
		end
	end
	
	if noclip.Parent then
		noclip:Destroy()
	end
	
	isTeleporting = false
	return true
end

-- H√†m Auto Farm (t·ªëi ∆∞u)
local function startAutoFarm()
	if connection then
		connection:Disconnect()
	end
	
	connection = game:GetService("RunService").Heartbeat:Connect(function()
		if autoFarmEnabled and not isTeleporting then
			local character = player.Character
			if character and character:FindFirstChild("HumanoidRootPart") then
				noclipTeleportToCoin()
				-- KH√îNG CH·ªú - bay li√™n t·ª•c kh√¥ng delay
			end
		end
	end)
end

-- H√†m d·ª´ng Auto Farm
local function stopAutoFarm()
	autoFarmEnabled = false
	autoFarmButton.Text = "B·∫¨T Auto Farm"
	autoFarmButton.BackgroundColor3 = Color3.fromRGB(60, 200, 60)
	setupButtonHover(autoFarmButton, Color3.fromRGB(60, 200, 60), Color3.fromRGB(80, 220, 80))
	
	if connection then
		connection:Disconnect()
		connection = nil
	end
end

-- K·∫øt n·ªëi s·ª± ki·ªán click n√∫t bay
teleportButton.MouseButton1Click:Connect(function()
	buttonClickEffect(teleportButton)
	task.spawn(noclipTeleportToCoin)
end)

-- K·∫øt n·ªëi s·ª± ki·ªán click n√∫t auto farm
autoFarmButton.MouseButton1Click:Connect(function()
	buttonClickEffect(autoFarmButton)
	
	if autoFarmEnabled then
		stopAutoFarm()
	else
		autoFarmEnabled = true
		autoFarmButton.Text = "T·∫ÆT Auto Farm"
		autoFarmButton.BackgroundColor3 = Color3.fromRGB(200, 60, 60)
		setupButtonHover(autoFarmButton, Color3.fromRGB(200, 60, 60), Color3.fromRGB(220, 80, 80))
		task.spawn(startAutoFarm)
	end
end)

-- X·ª≠ l√Ω khi player ch·∫øt/respawn
player.CharacterAdded:Connect(function(character)
	-- ƒê·∫£m b·∫£o GUI v·∫´n hi·ªÉn th·ªã
	if not screenGui.Parent then
		screenGui.Parent = playerGui
	end
	
	-- T·ª± ƒë·ªông ti·∫øp t·ª•c auto farm n·∫øu ƒëang b·∫≠t
	if autoFarmEnabled then
		-- Ch·ªù character load xong
		character:WaitForChild("HumanoidRootPart")
		task.wait(0.1) -- Gi·∫£m th·ªùi gian ch·ªù
		startAutoFarm()
	end
end)

player.CharacterRemoving:Connect(function()
	-- Kh√¥ng c·∫ßn l√†m g√¨ ƒë·∫∑c bi·ªát, GUI v·∫´n t·ªìn t·∫°i
end)

-- T·ª± ƒë·ªông d·ª´ng khi GUI b·ªã x√≥a
screenGui.Destroying:Connect(stopAutoFarm)

-- Kh·ªüi t·∫°o
print("‚ïê"..string.rep("‚ïê", 40).."‚ïê")
print("üöÄ Minh Hub GUI - ƒê√£ T·ªëi ∆Øu Ho√°")
print("üìå GUI s·∫Ω kh√¥ng b·ªã m·∫•t khi player ch·∫øt")
print("‚ö° T·ªëc ƒë·ªô bay: C·ª∞C NHANH - KH√îNG CH·ªú")
print("üíæ B·ªô nh·ªõ cache: ƒê√£ b·∫≠t")
print("‚ïê"..string.rep("‚ïê", 40).."‚ïê")
print("üéØ S·ª≠ d·ª•ng:")
print("‚Ä¢ K√©o frame ƒë·ªÉ di chuy·ªÉn GUI")
print("‚Ä¢ [Bay ƒë·∫øn Coin] - Bay ƒë·∫øn coin g·∫ßn nh·∫•t")
print("‚Ä¢ [B·∫¨T/T·∫ÆT Auto Farm] - T·ª± ƒë·ªông farm coin LI√äN T·ª§C")
print("‚ïê"..string.rep("‚ïê", 40).."‚ïê")
