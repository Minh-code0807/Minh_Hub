--// WindUI Loader
local WindUI = loadstring(game:HttpGet("https://github.com/Footagesus/WindUI/releases/latest/download/main.lua"))()

--// Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")
local UserInputService = game:GetService("UserInputService")
local player = Players.LocalPlayer
local camera = workspace.CurrentCamera

--// Global flags
getgenv().EspAll = false
getgenv().autoFarmEnabled = false

local isTeleporting = false
local connection = nil
local coinCache = {}
local lastCoinUpdate = 0
local CACHE_DURATION = 1

local currentMurderer = nil
local killerAllActive = false
local killerAllConnection = nil

--------------------------------------------------
--// UI Setup
--------------------------------------------------
local Window = WindUI:CreateWindow({
    Title = "Sae | Minh Hub",
    Icon = "rbxassetid://124009325876169",
    Folder = "SaeMinhHub",
    Author = "MinhCodeHub",
    NewElements = true
})

local MainTab = Window:Tab({Title = "Main", Icon = "bolt"})
local MurderTab = Window:Tab({Title = "Murderer / Police", Icon = "skull"})

--------------------------------------------------
--// ESP Handling
--------------------------------------------------
local ESPFolder = Instance.new("Folder", game.CoreGui)
ESPFolder.Name = "ESP_Holder"

local function AddESP(plr)
    if ESPFolder:FindFirstChild(plr.Name .. "_ESP") then return end
    local billboard = Instance.new("BillboardGui")
    billboard.Name = plr.Name .. "_ESP"
    billboard.AlwaysOnTop = true
    billboard.Size = UDim2.new(0, 200, 0, 50)
    billboard.ExtentsOffset = Vector3.new(0, 3, 0)
    billboard.Enabled = false
    billboard.Parent = ESPFolder

    local text = Instance.new("TextLabel")
    text.Text = plr.Name
    text.BackgroundTransparency = 1
    text.Size = UDim2.new(1, 0, 1, 0)
    text.Font = Enum.Font.FredokaOne
    text.TextStrokeTransparency = 0
    text.TextSize = 20
    text.TextStrokeColor3 = Color3.new(0,0,0)
    text.Parent = billboard

    coroutine.wrap(function()
        while plr.Parent do
            task.wait(0.1)
            pcall(function()
                local char = plr.Character
                local bp = plr.Backpack
                billboard.Adornee = char and char:FindFirstChild("Head")
                local hasKnife = (char and char:FindFirstChild("Knife")) or (bp and bp:FindFirstChild("Knife"))
                local hasGun = (char and char:FindFirstChild("Gun")) or (bp and bp:FindFirstChild("Gun"))
                if hasKnife then
                    text.TextColor3 = Color3.new(1, 0, 0)
                elseif hasGun then
                    text.TextColor3 = Color3.new(0, 0, 1)
                else
                    text.TextColor3 = Color3.new(0, 1, 0)
                end
                billboard.Enabled = getgenv().EspAll
            end)
        end
        if billboard then billboard:Destroy() end
    end)()
end

local function updateAllESP()
    for _, p in ipairs(Players:GetPlayers()) do
        if p ~= player then
            AddESP(p)
        end
    end
end

updateAllESP()
Players.PlayerAdded:Connect(function(p)
    if p ~= player then AddESP(p) end
end)
Players.PlayerRemoving:Connect(function(p)
    local bb = ESPFolder:FindFirstChild(p.Name .. "_ESP")
    if bb then bb:Destroy() end
end)

task.spawn(function()
    while true do
        updateAllESP()
        task.wait(2)
    end
end)

MainTab:Toggle({
    Title = "ESP (All Roles)",
    Default = false,
    Callback = function(state)
        getgenv().EspAll = state
        for _, bb in ipairs(ESPFolder:GetChildren()) do
            if bb:IsA("BillboardGui") then
                bb.Enabled = state
            end
        end
    end
})

--------------------------------------------------
--// Murderer Detection
--------------------------------------------------
local function updateMurderer()
    while true do
        currentMurderer = nil
        for _, p in ipairs(Players:GetPlayers()) do
            if p.Character then
                local hasKnife = p.Backpack:FindFirstChild("Knife") or p.Character:FindFirstChild("Knife")
                if hasKnife then
                    currentMurderer = p
                    break
                end
            end
        end
        task.wait(1)
    end
end
coroutine.wrap(updateMurderer)()

--------------------------------------------------
--// Teleport / Movement Helpers
--------------------------------------------------
local function teleportToObject(obj)
    if isTeleporting then return false end
    isTeleporting = true

    local char = player.Character
    if not char then isTeleporting = false return false end
    local root = char:FindFirstChild("HumanoidRootPart")
    if not root then isTeleporting = false return false end
    if not obj or not obj:IsDescendantOf(workspace) or not obj.Position then
        isTeleporting = false
        return false
    end

    local parts = {}
    for _, part in ipairs(char:GetDescendants()) do
        if part:IsA("BasePart") then
            parts[part] = part.CanCollide
            part.CanCollide = false
        end
    end

    root.CFrame = CFrame.new(obj.Position + Vector3.new(0, 3, 0))

    for part, canCollide in pairs(parts) do
        if part.Parent then part.CanCollide = canCollide end
    end

    isTeleporting = false
    return true
end

local function findNearestGunDrop()
    local list = {}
    for _, obj in ipairs(Workspace:GetDescendants()) do
        if (obj:IsA("BasePart") or obj:IsA("MeshPart")) and obj.Name == "GunDrop" then
            table.insert(list, obj)
        end
    end
    if #list == 0 then return nil end
    local root = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
    if not root then return list[1] end
    local nearest = list[1]
    local bestDist = (root.Position - nearest.Position).Magnitude
    for i = 2, #list do
        local d = (root.Position - list[i].Position).Magnitude
        if d < bestDist then
            bestDist = d
            nearest = list[i]
        end
    end
    return nearest
end

--------------------------------------------------
--// Coin Auto Farm
--------------------------------------------------
local function findNearestCoinContainer(pos)
    local now = tick()
    if now - lastCoinUpdate > CACHE_DURATION or #coinCache == 0 then
        coinCache = {}
        for _, obj in ipairs(Workspace:GetDescendants()) do
            if (obj:IsA("BasePart") or obj:IsA("MeshPart")) and
               (obj.Name:lower():find("coin") or obj.Name:lower():find("money") or
                obj.Name:lower():find("dollar") or obj.Name:lower():find("cash")) then
                table.insert(coinCache, obj)
            end
        end
        lastCoinUpdate = now
    end
    local nearest, dist = nil, math.huge
    for _, c in ipairs(coinCache) do
        if c.Parent then
            local d = (pos - c.Position).Magnitude
            if d < dist then
                dist = d
                nearest = c
            end
        end
    end
    return nearest
end

local function noclipTeleportToCoin()
    if isTeleporting then return false end
    isTeleporting = true
    local char = player.Character
    if not char then isTeleporting = false return false end
    local root = char:FindFirstChild("HumanoidRootPart")
    if not root then isTeleporting = false return false end
    local coin = findNearestCoinContainer(root.Position)
    if not coin then isTeleporting = false return false end

    local parts = {}
    for _, part in ipairs(char:GetDescendants()) do
        if part:IsA("BasePart") then
            parts[part] = part.CanCollide
            part.CanCollide = false
        end
    end

    root.CFrame = CFrame.new(coin.Position + Vector3.new(0, 2, 0))

    for part, canCollide in pairs(parts) do
        if part.Parent then part.CanCollide = canCollide end
    end

    isTeleporting = false
    return true
end

--------------------------------------------------
--// Kill All Logic
--------------------------------------------------
MurderTab:Toggle({
    Title = "Kill All (Auto Teleport + Shoot)",
    Default = false,
    Callback = function(state)
        if state then
            if killerAllConnection then killerAllConnection:Disconnect() end
            killerAllActive = true
            killerAllConnection = RunService.Heartbeat:Connect(function()
                if not killerAllActive or isTeleporting then return end
                local myRoot = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
                if not myRoot then return end
                for _, p in ipairs(Players:GetPlayers()) do
                    if p ~= player and p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
                        local dist = (myRoot.Position - p.Character.HumanoidRootPart.Position).Magnitude
                        if dist <= 250 then
                            myRoot.CFrame = p.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, 1)
                            camera.CFrame = CFrame.new(camera.CFrame.Position, p.Character.HumanoidRootPart.Position)
                            local t = player.Character:FindFirstChildOfClass("Tool")
                            if t then t:Activate() end
                            task.wait(0.3)
                        end
                    end
                end
            end)
        else
            if killerAllConnection then killerAllConnection:Disconnect() end
            killerAllActive = false
            killerAllConnection = nil
        end
    end
})

--------------------------------------------------
--// Get Gun Button
--------------------------------------------------
MurderTab:Button({
    Title = "Get Gun",
    Callback = function()
        local gd = findNearestGunDrop()
        if not gd then
            WindUI:Notify({Title = "Error", Content = "Không tìm thấy GunDrop!"})
        else
            local success = teleportToObject(gd)
            if success then
                WindUI:Notify({Title = "Teleported", Content = "Đã teleport đến GunDrop!"})
            else
                WindUI:Notify({Title = "Error", Content = "Không thể teleport đến GunDrop!"})
            end
        end
    end
})

--------------------------------------------------
--// NoClip Toggle
--------------------------------------------------
local noclipEnabled = false
local noclipConnection = nil

MainTab:Toggle({
    Title = "NoClip",
    Default = false,
    Callback = function(state)
        noclipEnabled = state
        if noclipConnection then
            noclipConnection:Disconnect()
            noclipConnection = nil
        end
        if noclipEnabled then
            noclipConnection = RunService.Stepped:Connect(function()
                local char = player.Character
                if char then
                    for _, part in ipairs(char:GetDescendants()) do
                        if part:IsA("BasePart") then
                            part.CanCollide = false
                        end
                    end
                end
            end)
        end
    end
})

--------------------------------------------------
--// Auto Farm Coin
--------------------------------------------------
MainTab:Toggle({
    Title = "Auto Farm Coin",
    Default = false,
    Callback = function(state)
        getgenv().autoFarmEnabled = state
        if state then
            if connection then connection:Disconnect() end
            connection = RunService.Heartbeat:Connect(function()
                if getgenv().autoFarmEnabled and not isTeleporting then
                    local c = player.Character
                    if c and c:FindFirstChild("HumanoidRootPart") then
                        noclipTeleportToCoin()
                    end
                end
            end)
        else
            if connection then
                connection:Disconnect()
                connection = nil
            end
        end
    end
})

MainTab:Button({
    Title = "Fly to Coin",
    Icon = "navigation",
    Color = Color3.fromRGB(0, 132, 255),
    Callback = function()
        noclipTeleportToCoin()
        WindUI:Notify({Title = "Teleport", Content = "Đã teleport đến coin!"})
    end
})

--------------------------------------------------
--// Fake Death (Test Version, không dồn cục)
--------------------------------------------------
local isFakeDead = false

local function fakeDeath()
    local char = player.Character
    if not char or not char:FindFirstChild("HumanoidRootPart") or not char:FindFirstChild("Humanoid") then return end
    local humanoid = char.Humanoid
    local root = char.HumanoidRootPart

    if not isFakeDead then
        isFakeDead = true
        root.Velocity = Vector3.new(0,5,0) -- lực nhẹ để rải nhân vật
        root.RotVelocity = Vector3.new(0,0,0)
        humanoid.PlatformStand = true
        root.CFrame = root.CFrame * CFrame.Angles(math.rad(90),0,0)
        for _, p in ipairs(char:GetDescendants()) do
            if p:IsA("BasePart") then p.CanCollide = false end
        end
        WindUI:Notify({Title = "Fake Death", Content = "Bạn đã giả chết! Nhấn Space để hồi dậy."})
    else
        isFakeDead = false
        humanoid.PlatformStand = false
        root.CFrame = root.CFrame * CFrame.Angles(math.rad(-90),0,0)
        for _, p in ipairs(char:GetDescendants()) do
            if p:IsA("BasePart") then p.CanCollide = true end
        end
        WindUI:Notify({Title = "Revived", Content = "Bạn đã hồi dậy!"})
    end
end

-- Nhấn Space để bật/tắt Fake Death
UserInputService.InputBegan:Connect(function(input, processed)
    if processed then return end
    if input.KeyCode == Enum.KeyCode.Space and player.Character then
        fakeDeath()
    end
end)

MurderTab:Button({
    Title = "Fake Death",
    Icon = "skull",
    Color = Color3.fromRGB(255,100,100),
    Callback = fakeDeath
})
